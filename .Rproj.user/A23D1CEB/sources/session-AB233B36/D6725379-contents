library(devtools)
install_github("je-puentes/ecm_r")


get_font()

data_example <- as_tibble(cbind(x = runif(15,0,1), y = runif(15,0,1), z = as.character(rbinom(15, size = 1, prob = 0.5 ))))


ggplot(data_example, aes(x = x, y = y, color = z, fill = z))+
  geom_point() +
  geom_line() +
  labs(title = "Graph title", subtitle = "Subtitle", caption = "Fonte, andajdl") +
  theme_ecm() +
  theme(axis.title = element_text(size = 27))




library(tidyverse)
library(readxl)
library(magrittr)
library(showtext)
library(ecmr)

#font_add_google(name = 'Montserrat', family = 'Montserrat')
#showtext_auto()

get_font()
logo_ecm <- get_logo()

setwd('d:\\Giovanni\\Downloads\\posição relativa')

dados <- read_excel('C:/Users/puent/OneDrive/Área de Trabalho/dados_teste/GM-GDP per capita - Dataset - v27.xlsx', sheet = 'data-GDP-per-capita-in-columns')
pop <- read_excel('C:/Users/puent/OneDrive/Área de Trabalho/dados_teste/population.xls')

dados <- dados[-c(198:204), -c(1)]

# Manipulando ----

# Vendo quais nomes não batem
teste1 <- inner_join(pop, dados, by = c('Country Name' = 'Country Name')) %>%
  mutate(dummy = 1)

teste2 <- left_join(pop, dados, by = c('Country Name' = 'Country Name'))

teste3 <- left_join(teste2, teste1, by = c('Country Name' = 'Country Name')) %>%
  filter(is.na(dummy))

# Arrumando os nomes
dados$`Country Name` <- gsub("Russia", "Russian Federation", dados$`Country Name`)
dados$`Country Name` <- gsub("Egypt", "Egypt, Arab Rep.", dados$`Country Name`)
dados$`Country Name` <- gsub("Turkey", "Turkiye", dados$`Country Name`)
dados$`Country Name` <- gsub("Iran", "Iran, Islamic Rep.", dados$`Country Name`)
dados$`Country Name` <- gsub("South Korea", "Korea, Rep.", dados$`Country Name`)
dados$`Country Name` <- gsub("Yemen", "Yemen, Rep.", dados$`Country Name`)
dados$`Country Name` <- gsub("Venezuela", "Venezuela, RB", dados$`Country Name`)
dados$`Country Name` <- gsub("North Korea", "Korea, Dem. People's Rep.", dados$`Country Name`)
dados$`Country Name` <- gsub("Syria", "Syrian Arab Republic", dados$`Country Name`)
dados$`Country Name` <- gsub("Hong Kong, China", "Hong Kong SAR, China", dados$`Country Name`)
dados$`Country Name` <- gsub("Lao", "Lao PDR", dados$`Country Name`)
dados$`Country Name` <- gsub("Gambia", "Gambia, The", dados$`Country Name`)
dados$`Country Name` <- gsub("Macedonia, FYR", "North Macedonia", dados$`Country Name`)

# Mergeando população com PIB per capita
base <- inner_join(pop, dados, by = c('Country Name' = 'Country Name'))

# Argentina e Uruguai ----
lista <- list()

for(i in as.character(1800:2021)){
  lista[[paste0(i)]] <- base %>%
    select(`Country Name`, `i`) %>%
    mutate(ano = i) %>%
    rename(pib = `i`) %>%
    arrange(-pib) %>%
    mutate(posição = c(1:155)) %>%
    filter(`Country Name` == 'Argentina' | `Country Name` == 'Uruguay') %>%
    select(posição, ano, `Country Name`)
}

pa <- bind_rows(lista) %>%
  arrange(`Country Name`)

# Colocando a posição em termos relativos
pa %<>% mutate(percentil = 100 - (posição * 100 / 155))

# Pegando de 5 em 5 anos (melhora a visualização no gráfico)
p1 <- function(x){
  if(x%%5 == 0){
    return (1)
  } else {
    return(0)
  }
}

p2 <- function(x){
  if(x%%5 == 0){
    return (1)
  } else {
    return(0)
  }
}

p3 <- Vectorize(p1)
p4 <- Vectorize(p2)

p5 <- p3(1800:2021)
p6 <- p4(1800:2021)

p <- c(p5, p6)

pa2 <- bind_cols(pa, p) %>%
  filter(`...5` == 1) %>%
  select(-`...5`)

# Gráfico

ggplot(pa2, aes(x = ano, y = percentil, group = as.factor(`Country Name`), color = as.factor(`Country Name`) )) +
  geom_line(size = 1) +
  scale_color_manual(values = c('Green','Yellow')) +
  geom_point(size = 3) +
  labs(x = "Anp", y = "Percentil") +
  theme_ecm() +
  scale_x_discrete(breaks = seq(1800, 2020, 20)) +
  scale_y_continuous(breaks = c(0,10,20,30,40,50,60,70,80,90,100), limits = c(0,100)) +
  theme(text = element_text(family = 'Montserrat'),
        axis.title.y = element_text(size = 60),
        axis.text.x = element_text(size = 50),
        axis.text.y = element_text(size = 50),
        legend.text = element_text(size = 50))

library(ggplot2)
library(hrbrthemes)

# create data
xValue <- 1:10
yValue <- cumsum(rnorm(10))
data <- data.frame(xValue,yValue)

# Plot
ggplot(data, aes(x=xValue, y=yValue)) +
  geom_line( color="#69b3a2", size=2, alpha=0.9, linetype=2) +
  geom_point(color="#69b3a2")+
  ggtitle("Evolution of something") +
  theme_ecm()


gdp <- readr::read_csv('https://raw.githubusercontent.com/rsquaredacademy/datasets/master/gdp.csv')

gdp2 <- gdp %>% 
  select(year, growth, india, china) %>% 
  gather(key = country, value = gdp, -year)

ggplot(gdp2, aes(year, gdp, group = country, color = country)) +
  geom_line() +
  geom_point() +
  theme_ecm()
